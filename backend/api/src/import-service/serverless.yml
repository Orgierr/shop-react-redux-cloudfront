service: import-service
frameworkVersion: '3'
useDotenv: true
package:
  individually: true
plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dotenv-plugin
provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-central-1
  environment:
    BUCKET_NAME: ${env:BUCKET_NAME}
    REGION: ${env:REGION}
    SQS_URL: !Ref ImportFileParserSQS
    SNS_ARN: !Ref CreateProductTopicSNS
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 's3:*'
          Resource: 'arn:aws:s3:::${env:BUCKET_NAME}/*'
        - Effect: 'Allow'
          Action:
            - 'sqs:*'
          Resource: !GetAtt [ImportFileParserSQS, Arn]
        - Effect: 'Allow'
          Action:
            - 'sns:*'
          Resource: !Ref CreateProductTopicSNS

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          method: get
          path: import
          cors: true
          integration: lambda
          request:
            parameters:
              querystrings:
                fileName: true
          authorizer:
            name: basicAuthorizer
            arn: arn:aws:lambda:eu-central-1:813610760019:function:authorization-service-dev-basicAuthorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: ${env:BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
            - suffix: .csv
          existing: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn: !GetAtt [ImportFileParserSQS, Arn]
resources:
  Resources:
    ImportServiceBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:BUCKET_NAME}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - PUT
    ImportFileParserSQS:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    CreateProductTopicSNS:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    CreateProductTopicSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        TopicArn: !Ref CreateProductTopicSNS
        Endpoint: test1@net.com
        FilterPolicy: ${file(./FilterPolicy.json)}
    CreateProductTopicSubscriptionPrice:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        TopicArn: !Ref CreateProductTopicSNS
        Endpoint: test2@net.com
        FilterPolicy:
          price:
            - 214
custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - aws-sdk
    target: node14
    platform: node
    concurrency: 10
  CLOUDFRONT: https://d24quk142c4yyb.cloudfront.net
  dotenv:
    path: ../../../rds/.env
